name: Release

on:
  push:
    branches:
      - master

jobs:

  verify-version:
    runs-on: ubuntu-latest
    name: Verify version
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: "echo ::set-output name=VERSION::$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
    - name: Test snapshot
      run: if [[ "${{ steps.get_version.outputs.VERSION }}" == *"-SNAPSHOT" ]]; then exit 1; else exit 0; fi
    - name: Get release
      id: get_release
      run: echo ::set-output name=RELEASE_HTTP_CODE::$(curl -s -o out.html -w '%{http_code}'  https://github.com/les-sagas-mp3/app/releases/tag/${{ steps.get_version.outputs.VERSION }};)
    - name: Test release existence
      run: if [[ "${{ steps.get_release.outputs.RELEASE_HTTP_CODE }}" -eq "200" ]]; then exit 1; else exit 0; fi

  build:
    needs: verify-version
    name: Build Ionic
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - run: npm ci
    - run: npm run build --configuration=production-fr

  build-android:
    needs: build
    name: Build Android
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Install node modules
      run: npm install
    - name: Use coturiv/setup-ionic
      uses: coturiv/setup-ionic@v1
      with:
        ionic-version: 6.20.6
    - name: Copy assets to Android
      run: ionic build --configuration=production-fr
    - name: Sync Ionic with Android
      run: ionic cap sync
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Release Android APK
      run: ./.release/release_android.sh
      env:
        WORKSPACE: ${{ github.workspace }}
        GPG_DECRYPT_PASSPHRASE: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
        ANDROID_SIGNING_KEYSTORE_PASS: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASS }}
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ${{ github.workspace }}/android/app/build/outputs/apk/release/app-release.apk

  release:
    needs: [verify-version, build, build-android]
    name: Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Config Git
      run: git config user.email "${{ secrets.GIT_CONFIG_EMAIL }}" && git config user.name "${{ secrets.GIT_CONFIG_NAME }}"
    - run: git tag ${{ needs.verify-version.outputs.version }}
    - run: git push origin ${{ needs.verify-version.outputs.version }}
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.verify-version.outputs.version }}
        release_name: ${{ needs.verify-version.outputs.version }}
        body: |
          Release ${{ needs.verify-version.outputs.version }}
        draft: false
        prerelease: false
    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Install node modules
      run: npm install
    - run: npm ci
    - run: npm run build --configuration=production-fr
    - run: tar czf www.tar.gz www
    - name: Upload dist
      id: upload-dist
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/www.tar.gz
        asset_name: les-sagas-mp3.tar.gz
        asset_content_type: application/gzip
    - name: Use coturiv/setup-ionic
      uses: coturiv/setup-ionic@v1
      with:
        ionic-version: 6.20.6
    - name: Copy assets to Android
      run: ionic build --configuration=production-fr
    - name: Sync Ionic with Android
      run: ionic cap sync
    - name: Write google-services.json file
      run: echo $GOOGLE_SERVICES >> android/app/google-services.json
      shell: bash
      env:
        GOOGLE_SERVICES : ${{ secrets.GOOGLE_SERVICES }}
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Release Android APK
      run: ./.release/release_android.sh
      env:
        WORKSPACE: ${{ github.workspace }}
        GPG_DECRYPT_PASSPHRASE: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
        ANDROID_SIGNING_KEYSTORE_PASS: ${{ secrets.ANDROID_SIGNING_KEYSTORE_PASS }}
    - name: Upload APK
      id: upload-apk 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/android/app/build/outputs/apk/release/app-release.apk
        asset_name: les-sagas-mp3.apk
        asset_content_type: application/vnd.android.package-archive

  publish-docker:
    needs: [verify-version, release]
    name: Build & Publish Docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: '${{ needs.verify-version.outputs.version }}'
    - name: Build the Docker image
      run: docker build . --file Dockerfile --build-arg configuration=production-fr --tag lessagasmp3/app:${{ needs.verify-version.outputs.version }}
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish to Docker Hub
      run: docker push lessagasmp3/app:${{ needs.verify-version.outputs.version }}
