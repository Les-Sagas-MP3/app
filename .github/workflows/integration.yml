name: Integration

on:
  push:
    branches:
      - develop

jobs:

  build:
    name: Ionic Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - run: npm ci
    - run: npm run build --if-present

  publish-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: "echo ::set-output name=VERSION::$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
    - name: Build the Docker image
      run: docker build . --file Dockerfile --build-arg configuration=heroku-fr --tag lessagasmp3/app:heroku-${{ steps.get_version.outputs.VERSION }}
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish to Docker Hub
      run: docker push lessagasmp3/app:heroku-${{ steps.get_version.outputs.VERSION }}

  deploy-heroku:
    needs: publish-docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: sjdonado/heroku@0f16401029a67519b6547af7247983640996393a
    - name: Get the version
      id: get_version
      run: "echo ::set-output name=VERSION::$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
    - name: Pull Docker Image
      run: docker pull lessagasmp3/app:heroku-${{ steps.get_version.outputs.VERSION }}
    - name: Tag the image
      run: docker tag lessagasmp3/app:heroku-${{ steps.get_version.outputs.VERSION }} registry.heroku.com/les-sagas-mp3/web
    - name: Get Heroku Tools
      run: wget -qO- https://toolbelt.heroku.com/install.sh | sh
    - name: Login to Heroku Registry
      run: echo "${{secrets.HEROKU_PASSWORD}}" | docker login -u "${{secrets.HEROKU_USERNAME}}" --password-stdin registry.heroku.com
    - name: Login to Heroku API
      run: heroku container:login
      env:
        HEROKU_API_KEY: ${{secrets.HEROKU_PASSWORD}}
    - name: Publish to Heroku Registry
      run: docker push registry.heroku.com/les-sagas-mp3/web
    - name: Release Heroku app
      run: heroku container:release web --app les-sagas-mp3
      env:
        HEROKU_API_KEY: ${{secrets.HEROKU_PASSWORD}}

  build-android:
    needs: build
    name: Deploy APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install node modules
      run: npm install
    - name: Use coturiv/setup-ionic
      uses: coturiv/setup-ionic@v1
      with:
        ionic-version: 6.11.8
    - name: Copy assets to Android
      run: ionic build --configuration=heroku-fr
    - name: Sync Ionic with Android
      run: ionic cap sync
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Build Debug APK
      run: cd android && bash ./gradlew :app:assembleDebug
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ${{ github.workspace }}/android/app/build/outputs/apk/debug/app-debug.apk
